{
  "version": "1.0",
  "lastUpdated": "2025-08-07T02:08:00.000Z",
  "queryCount": 10,
  "queries": [
    {
      "id": "6b6c57e6-85b1-45c5-976e-3de4619dd6fa",
      "description": "이 쿼리는 SBOOK(예약), SFLIGHT(항공편), SCARR(항공사) 테이블을 조인하여, 특정 예약번호(BOOKID)와 승객이름(PASS_NAME), 예약이 취소되지 않은 상태(RES_STATUS), 특정 항공편(FLDATE, CARRID)에 해당하는 데이터를 추출합니다. 이를 통해 항공사명과 예약자명 정보를 확인하는 것이 목적입니다.",
      "sqlScript": "SELECT SINGLE CARR.CARRNAME, B.PASS_NAME\n  FROM SBOOK AS B\n  JOIN SFLIGHT AS F ON B.CARRID = F.CARRID AND B.CONNID = F.CONNID AND B.FLDATE = F.FLDATE\n  JOIN SCARR AS CARR ON B.CARRID = CARR.CARRID\n WHERE B.BOOKID = @P_BOOKID\n   AND B.PASS_NAME = @P_PASS_NAME\n   AND B.RES_STATUS <> 'X'\n   AND F.FLDATE = @P_FLDATE\n   AND F.CARRID = @P_CARRID\n INTO (@L_CARRNAME, @L_PASSNAME).",
      "metadata": {
        "addedVia": "demo-convert",
        "addedAt": "2025-08-07T02:08:00.000Z"
      },
      "createdAt": "2025-08-07T02:08:00.000Z",
      "updatedAt": "2025-08-07T02:08:00.000Z"
    },
    {
      "id": "2046cab3-d9f4-4053-b49a-df024019ee83",
      "description": "이 쿼리는 SFLIGHT(항공편) 테이블에서 특정 항공편번호(LT_TEMP-CONNID)와 항공사코드(CARRID)가 일치하는 항공편의 FLDATE(출발일자)를 추출합니다. 이를 통해 해당 항공편의 출발일자를 테이블 형태로 반환합니다.",
      "sqlScript": "SELECT FLDATE\n  FROM SFLIGHT\n   FOR ALL ENTRIES IN @LT_TEMP\n  WHERE CARRID = @LT_TEMP-CARRID\n    AND CONNID = @LT_TEMP-CONNID\n  INTO TABLE @DATA(LT_FLDATE).",
      "metadata": {
        "addedVia": "demo-convert",
        "addedAt": "2025-08-07T02:08:00.001Z"
      },
      "createdAt": "2025-08-07T02:08:00.001Z",
      "updatedAt": "2025-08-07T02:08:00.001Z"
    },
    {
      "id": "e4172139-9707-4ac1-92b3-875bf1c0f4ad",
      "description": "이 쿼리는 SBOOK(예약) 테이블에서 특정 예약번호(BOOKID)에 해당하는 예약 상세 정보를 추출합니다. 추출되는 필드에는 예약번호, 승객명, 항공사, 항공편, 등급, 예약상태 등 예약의 상세 정보가 포함됩니다.",
      "sqlScript": "SELECT SINGLE BOOKID PASS_NAME CARRID CONNID FLDATE CLASS RES_STATUS SMOKER LUGGWEIGHT ORDER_DATE\n  FROM SBOOK\n  INTO CORRESPONDING FIELDS OF @LS_BOOK\n  WHERE BOOKID = @P_BOOKID.",
      "metadata": {
        "addedVia": "demo-convert",
        "addedAt": "2025-08-07T02:08:00.002Z"
      },
      "createdAt": "2025-08-07T02:08:00.002Z",
      "updatedAt": "2025-08-07T02:08:00.002Z"
    },
    {
      "id": "9f70729e-56e2-44f7-9dd2-2cfc0954586a",
      "description": "이 쿼리는 SBOOK(예약)과 SFLIGHT(항공편) 테이블을 조인하여, 특정 항공편(CONNID)과 항공사(CARRID)에 해당하는 예약정보(예약번호, 승객명)를 추출합니다. 중복 없이 예약번호와 항공편 정보를 테이블로 반환합니다.",
      "sqlScript": "SELECT DISTINCT B.BOOKID AS RESID, F.CONNID AS FLTID\n  FROM SBOOK AS B\n  INNER JOIN SFLIGHT AS F\n    ON B.CARRID = F.CARRID AND B.CONNID = F.CONNID AND B.FLDATE = F.FLDATE\n   FOR ALL ENTRIES IN @LT_CONN\n  WHERE F.CONNID = @LT_CONN-CONNID\n    AND F.CARRID = @LT_CONN-CARRID\n  INTO TABLE @LT_RESERV.",
      "metadata": {
        "addedVia": "demo-convert",
        "addedAt": "2025-08-07T02:08:00.003Z"
      },
      "createdAt": "2025-08-07T02:08:00.003Z",
      "updatedAt": "2025-08-07T02:08:00.003Z"
    },
    {
      "id": "2de137b6-94c8-47f4-aadd-7294ac878d1b",
      "description": "이 쿼리는 SBOOK(예약) 테이블에서 특정 예약번호(BOOKID)와 등급(CLASS)에 해당하는 예약의 PASS_NAME(승객명)을 추출합니다. 이를 단일 값으로 반환합니다.",
      "sqlScript": "SELECT SINGLE PASS_NAME FROM SBOOK\n  INTO @DATA(LV_NAME)\n  WHERE BOOKID = @LS_ITEM-BOOKID\n    AND CLASS = @LS_ITEM-CLASS.",
      "metadata": {
        "addedVia": "demo-convert",
        "addedAt": "2025-08-07T02:08:00.004Z"
      },
      "createdAt": "2025-08-07T02:08:00.004Z",
      "updatedAt": "2025-08-07T02:08:00.004Z"
    },
    {
      "id": "4395bccb-4868-48ae-8a11-b6cb5cff1274",
      "description": "이 쿼리는 SBOOK(예약), SFLIGHT(항공편), SCARR(항공사) 테이블을 조인하여 예약정보 중 특정 승객이름과 특정 항공편(항공사, 노선, 일자, 등등)이 일치하고 취소되지 않은 예약건의 예약번호와 항공사명을 추출합니다.",
      "sqlScript": "SELECT DISTINCT F.CONNID AS FLTID, CARR.CARRNAME AS AIRLINE\n  FROM SBOOK AS B\n  JOIN SFLIGHT AS F ON B.CARRID = F.CARRID AND B.CONNID = F.CONNID AND B.FLDATE = F.FLDATE\n  JOIN SCARR AS CARR ON F.CARRID = CARR.CARRID\n WHERE B.PASS_NAME = @PS_PASS-NAME\n   AND F.CONNID = @PS_PASS-CONNID\n   AND B.CLASS = @PS_PASS-CLASS\n   AND B.RES_STATUS = @SPACE",
      "metadata": {
        "addedVia": "demo-convert",
        "addedAt": "2025-08-07T02:08:00.005Z"
      },
      "createdAt": "2025-08-07T02:08:00.005Z",
      "updatedAt": "2025-08-07T02:08:00.005Z"
    },
    {
      "id": "0f76e641-dbc9-4d8e-8e9c-2753e03a14ba",
      "description": "이 쿼리는 SFLIGHT(항공편)과 SBOOK(예약), SCARR(항공사) 테이블을 조인하여 특정 조건(CARRID, CONNID, FLDATE, 등등)을 만족하는 예약번호와 항공사명을 추출합니다.",
      "sqlScript": "SELECT F.CONNID AS FLTID, F.CARRID AS AIRLINE\n  FROM SFLIGHT AS F\n   JOIN SBOOK AS B ON B.CARRID = F.CARRID AND B.CONNID = F.CONNID AND B.FLDATE = F.FLDATE\n   JOIN SCARR AS C ON F.CARRID = C.CARRID\n WHERE F.CARRID = @PV_CARRID\n   AND F.CONNID = @PV_CONNID\n   AND F.FLDATE = @PV_FLDATE\n   AND B.RES_STATUS = @SPACE\n  INTO CORRESPONDING FIELDS OF TABLE @PT_FLT.",
      "metadata": {
        "addedVia": "demo-convert",
        "addedAt": "2025-08-07T02:08:00.006Z"
      },
      "createdAt": "2025-08-07T02:08:00.006Z",
      "updatedAt": "2025-08-07T02:08:00.006Z"
    },
    {
      "id": "b9605e6f-3219-4ee3-bdf7-2cdf1a251acc",
      "description": "이 쿼리는 SBOOK(예약), SFLIGHT(항공편) 테이블을 조인하여, 특정 승객이름과 항공편에 대한 예약 정보(예약ID, 항공편ID, 항공사명 등)를 추출합니다. 항공사명은 SCARR에서 가져옵니다. 예약이 없는 건(승객이름, 예약번호 모두 NULL)은 제외합니다.",
      "sqlScript": "SELECT B.BOOKID, F.CONNID, CARR.CARRNAME\n  FROM SBOOK AS B\n  INNER JOIN SFLIGHT AS F ON B.CARRID = F.CARRID AND B.CONNID = F.CONNID AND B.FLDATE = F.FLDATE\n  INNER JOIN SCARR AS CARR ON B.CARRID = CARR.CARRID\n FOR ALL ENTRIES IN @LT_PASS\nWHERE B.PASS_NAME = @LT_PASS-PASS_NAME\n  AND NOT ( B.BOOKID IS INITIAL AND B.PASS_NAME IS INITIAL )\nINTO TABLE @LT_BOOKLIST.",
      "metadata": {
        "addedVia": "demo-convert",
        "addedAt": "2025-08-07T02:08:00.007Z"
      },
      "createdAt": "2025-08-07T02:08:00.007Z",
      "updatedAt": "2025-08-07T02:08:00.007Z"
    },
    {
      "id": "bee9435f-8cc0-4cc8-9273-6d11848cbfa7",
      "description": "이 쿼리는 SBOOK(예약), SFLIGHT(항공편), SCARR(항공사) 테이블을 조인하여 특정 예약조건(항공편, 항공사, 예약상태 등)에 해당하는 예약ID와 항공사명을 추출합니다. 중복 없이 특정 조건에 대한 예약 정보를 확인할 수 있습니다.",
      "sqlScript": "SELECT DISTINCT F.CONNID AS FLTID, CARR.CARRNAME\n  FROM SBOOK AS B\n   JOIN SFLIGHT AS F ON B.CARRID = F.CARRID AND B.CONNID = F.CONNID AND B.FLDATE = F.FLDATE\n   JOIN SCARR AS CARR ON F.CARRID = CARR.CARRID\n WHERE F.CARRID = @PS_LRK-CARRID\n  AND B.CLASS = @GC_EC\n  AND B.RES_STATUS = @SPACE",
      "metadata": {
        "addedVia": "demo-convert",
        "addedAt": "2025-08-07T02:08:00.008Z"
      },
      "createdAt": "2025-08-07T02:08:00.008Z",
      "updatedAt": "2025-08-07T02:08:00.008Z"
    },
    {
      "id": "3e5afc10-7272-4cee-a586-456297aeb8bb",
      "description": "이 쿼리는 SBOOK(예약), SFLIGHT(항공편) 테이블을 조인하여, 내부 테이블 lt_book의 예약번호, 승객명에 해당하는 예약과 항공편 정보를 추출합니다. 예약상태가 활성(예: RES_STATUS = ' ')인 데이터만 반환합니다.",
      "sqlScript": "SELECT B.BOOKID, B.PASS_NAME, F.CONNID, F.FLDATE\n  INTO CORRESPONDING FIELDS OF TABLE lt_res\n  FROM SBOOK AS B\n   INNER JOIN SFLIGHT AS F ON B.CARRID = F.CARRID AND B.CONNID = F.CONNID AND B.FLDATE = F.FLDATE\n   FOR ALL ENTRIES IN lt_book\n WHERE B.BOOKID = lt_book-bookid\n   AND B.PASS_NAME = lt_book-pass_name\n   AND B.RES_STATUS = ' '.",
      "metadata": {
        "addedVia": "demo-convert",
        "addedAt": "2025-08-07T02:08:00.009Z"
      },
      "createdAt": "2025-08-07T02:08:00.009Z",
      "updatedAt": "2025-08-07T02:08:00.009Z"
    }
  ]
}
